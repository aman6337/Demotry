abstract class User {
    private int userid;
    private String name;

    public User(int userid, String name) {
        this.userid = userid;
        this.name = name;
    }

    // Getters (optional, if needed)
    public int getUserid() {
        return userid;
    }

    public String getName() {
        return name;
    }

    public abstract float getDiscount(float shoppingAmt);
}

class RegisteredUser extends User {
    private int registrationNo;

    public RegisteredUser(int userid, String name, int registrationNo) {
        super(userid, name);
        this.registrationNo = registrationNo;
    }

    public int getRegistrationNo() {
        return registrationNo;
    }

    @Override
    public float getDiscount(float shoppingAmt) {
        float discountPercent = 0.0f;
        if (shoppingAmt < 1000) {
            discountPercent = 5.0f;
        } else if (shoppingAmt < 5000) {
            discountPercent = 10.0f;
        } else {
            discountPercent = 15.0f;
        }
        float discountAmt = (discountPercent / 100) * shoppingAmt;
        return shoppingAmt - discountAmt;
    }
}

class PrivilegedUser extends User {
    private String cardType;

    public PrivilegedUser(int userid, String name, String cardType) {
        super(userid, name);
        this.cardType = cardType.toLowerCase();
    }

    public String getCardType() {
        return cardType;
    }

    @Override
    public float getDiscount(float shoppingAmt) {
        float discountPercent = 0.0f;
        switch(cardType) {
            case "silver":
                discountPercent = 12.0f;
                break;
            case "gold":
                discountPercent = 20.0f;
                break;
            default:
                discountPercent = 0.0f; // no discount for unknown card type
        }
        float discountAmt = (discountPercent / 100) * shoppingAmt;
        return shoppingAmt - discountAmt;
    }
}
